{
	"version": 3,
	"file": "../sass/editor.css",
	"sources": [
		"../sass/editor.scss",
		"../sass/_client/_variables.scss",
		"../sass/core/_function.scss",
		"../sass/core/_variables.scss",
		"../sass/core/_mixins.scss",
		"../sass/core/mixins/_pseudo.scss",
		"../sass/core/mixins/_placeholders.scss",
		"../sass/core/mixins/_shape.scss",
		"../sass/core/mixins/_tab-focus.scss",
		"../sass/core/mixins/_position.scss",
		"../sass/core/mixins/_prefix.scss",
		"../sass/core/mixins/_rem.scss",
		"../sass/core/mixins/_center.scss",
		"../sass/core/mixins/_grid.scss",
		"../sass/core/mixins/_mq.scss",
		"../sass/core/mixins/_font.scss",
		"../sass/core/mixins/_text.scss",
		"../sass/core/mixins/_icon.scss",
		"../sass/core/mixins/_animation.scss",
		"../sass/core/mixins/_gradient.scss",
		"../sass/_client/base/_basic.scss",
		"../sass/_client/base/_type.scss",
		"../sass/_client/_util.scss"
	],
	"sourcesContent": [
		"@charset \"UTF-8\";\n\n\n// import\n// ------------------------------------------------------------\n@import \"_client/variables\";\n\n@import \"core/function\";\n@import \"core/variables\";\n@import \"core/mixins\";\n\n@import \"_client/base/basic\";\n@import \"_client/base/type\";\n@import \"_client/util\";\n\nbody { padding: 10px 15px; height: auto; }\nh1,h2,h3,h4,h5,h6,p,blockquote,\nul,ol,li,dl,dt,dd { text-align: left; }\nul, ol { @extend .ml-24; }\n\nimg {\n    max-width: 100% !important;\n}",
		"@charset \"UTF-8\";\n\n// == color\n// ----------------------------------------------------------------------\n// 抽象色\n$brand-primary:           #013d4d;    // 主色\n$brand-secondary:         #be4c54;    // 輔色\n$muted:                   #E3E3E4;    // 灰色\n$success:                 #88C200;    // 綠\n$info:                    #00A7B0;    // 藍\n$warning:                 #FCE05B;    // 黃\n$danger:                  #E96520;    // 紅 #CD000D\n\n$pale-green:              #E7FFE7 !default;\n$pale-blue:               #E7FFFF !default;\n$pale-yellow:             #fffFD7 !default;\n$pale-red:                #FFE7E7 !default;\n\n// 情境狀態 + 配色\n$colors: (\n    primary:              $brand-primary,\n    secondary:            $brand-secondary,\n    muted:                $muted,\n    success:              $success,\n    info:                 $info,\n    warning:              $warning,\n    danger:               $danger\n);\n\n@function color($value: \"primary\") {\n    @return map-get($colors, $value);\n}\n\n\n// == config\n// ----------------------------------------------------------------------\n$img-path:                '../images' !default;\n$font-path:               '../font' !default;\n\n\n// == spacing\n// ------------------------------------------------------------\n$spacer:                  1rem !default;                    // for $Spacing\n$spacing: (\n    0:    0,\n    2:    $spacer/8,\n    4:    $spacer/4,\n    8:    $spacer/2,\n    12:   $spacer*0.75,\n    16:   $spacer,\n    24:   $spacer*1.5,\n    32:   $spacer*2,\n    48:   $spacer*3,\n    64:   $spacer*4\n) !default;\n\n@function spacing($value) {\n    @return map-get($spacing, $value);\n}\n\n// This variable affects the '.w-*' classes. ref: util\n$sizes: (\n    8: 8%,\n    15: 15%,\n    20: 20%,\n    25: 25%,\n    // 75: 75%,\n    100: 100%\n) !default;\n\n\n// == base\n// ------------------------------------------------------------\n//\n// basic\n$body-bg:                    #fff url(#{$img-path}/banner.jpg) center top no-repeat !default;\n$body-color:                 #444 !default;\n\n$font-family-base:           'Open Sans','Helvetica Neue',Helvetica,Arial,\\5FAE\\8EDF\\6B63\\9ED1\\9AD4,\"微軟正黑體\",\"Microsoft JhengHei\",sans-serif !default;\n$font-family-sp:             'Anton', sans-serif;\n\n$font-size-base:             16px !default;                    // 1rem\n$line-height:                1.5 !default;\n\n//\n// link\n$link-color:                 $brand-primary !default;                                // 連結文字色 color(\"primary\")\n$link-decoration:            none !default;                                // 連結底線樣式\n$link-hover-color:           $brand-secondary !default;         // 移過後顏色\n$link-hover-decoration:      false !default;                               // 移過後底線樣式\n$link-transition:            color .35s, background .3s !default;          // 滑鼠移過動態特效\n\n//\n// type\n$font-size-h1:               $font-size-base * 3 !default;       // 48px old-2.5\n$font-size-h2:               $font-size-base * 2 !default;       // 32px old-2\n$font-size-h3:               $font-size-base * 1.75 !default;    // 28px old-1.75\n$font-size-h4:               $font-size-base * 1.5 !default;     // 24px old-1.5\n$font-size-h5:               $font-size-base * 1.125 !default;   // 18px old-1.25\n$font-size-h6:               $font-size-base * 1.0625 !default;  // 17px old-1\n\n$headings-color:             false !default;\n$headings-font-family:       false !default;\n$headings-font-weight:       500 !default;\n$headings-line-height:       1.1 !default;\n$headings-letter-spacing:    false !default;\n$headings-margin-bottom:     $spacer*0.95 !default;\n\n$p-spacer:                   spacing(8) !default;  // $spacer*0.375\n$abbr-border-color:          color(\"muted\") !default;\n$hr-border:                  1px solid $abbr-border-color !default;\n\n//\n// common\n$border-radius:              5px !default;\n$prefixes:                   webkit !default;                  // all: webkit moz o ms\n$cursor-disabled:            not-allowed;                      // 表單元素(停用)上的滑鼠樣式\n\n//\n// table\n// 共用樣式\n$table-borderY-has:      true !default;\n$table-border-color:     #fff !default;\n$table-pd:               8px 4px !default; // 5px 8px\n$table-mb:               false !default;\n\n// 滑鼠移過變色\n$table-bg-hover:         rgba(#fffFD7, 0.7) !default;\n\n// 斑馬紋條列式表格\n$table-bg-striped:       rgba(#666, 0.15) !default; // #f9f9f9\n$table-bg-active:        false !default;\n$table-striped-list:     'even' !default;   // even, odd\n\n// RWD時，表格出現卷軸\n$table-rwd:              true !default;\n\n//\n// form\n$cursor-disabled:                not-allowed !default;             // 表單元素(停用)上的滑鼠樣式\n$input-font-size:                15px !default;\n$input-height:                   false !default;                    //$input-font-size * 1.8\n$input-pd:                       0 12px !default;\n\n$input-bg:                       $brand-primary !default;          // #fff\n$input-border-color:             lighten($muted, 8) !default;\n$input-color:                    #fff !default;                    // $brand-primary\n$input-focus-color:              $warning !default; //lighten($brand-primary, 15%)\n$input-border:                   1px solid $input-border-color !default;\n$input-radius:                   false !default; // 5px\n$input-shadow:                   inset 0 1px 1px rgba(0,0,0,.075) !default;\n$input-transition:               border-color ease-in-out .15s, box-shadow ease-in-out .15s !default;\n$input-placeholder-color:        rgba(#fff, .3) !default;\n\n$form-label-line-height:         ($input-font-size + 4) !default;\n\n// select\n$select-caret-color:             $warning !default;\n$select-caret-checked-color:     $brand-secondary !default;\n\n// checkbox style\n$choice-box-color:               $input-focus-color !default;\n$checkbox-height:                if($input-height, $input-height - 5, 33px) !default; // 同input算法\n$checkbox-size:                  if($input-height, $input-height, $checkbox-height) !default;\n$checkbox-icon-size:             $checkbox-size*.7 !default;\n$checkbox-radius:                $input-radius !default;\n\n\n// == layout\n// ----------------------------------------------------------------------\n$min-width:             375px;     // 網頁最小尺寸 1008\n$max-width:             1460px;     // 網頁最寬尺寸: .wrap\n$menu-item:             false;\n\n$wrapper-bg:            url(#{$img-path}/bg.jpg) center bottom 34px no-repeat !default;\n$wrapper-b-spacing:     145px !default;\n\n// header\n$header-height:         335px !default;\n$header-bg:             false !default;\n$header-mobile-height:  36px; // 本次專案\n\n// logo\n$logo-img:              'logo.png' !default; // 'logo.gif' or false\n$logo-size:             200px 62px !default;\n\n// footer\n$footer-height:         104px !default;\n$footer-bg:             rgba(#4d4d4d, 0.9) !default;\n$footer-color:          #fff;\n\n// z-index\n$z-index: (\n    header:             6,\n    main:               1,\n    footer:             2,\n    logo:               10,\n    menu:               20,\n    figure:             1,\n    tooltip:            88,\n    goTop:              99,\n    overlay:            999\n);\n\n\n// ==  modules\n// ------------------------------------------------------------\n//\n// nav\n$sub-nav-has:           false !default;         // 子選單\n$nav-root:              if($sub-nav-has, 'li > a', 'a') !default;\n\n// 行動版\n$mobile-menu-has:       true !default;\n$mobile-menu-bk:        'desktop' !default;     // 從()螢幕寬度以下開始出現行動版選單\n$mobile-menu-bg:        desaturate(rgba($brand-primary, .8), 50) !default;          // rgba(#fff,.95)\n$mobile-menu-width:     100% !default;\n$mobile-transition:     '.3s' !default;    // push - left .35s; overlay - opacity 1s\n\n//\n// btn\n// 下為基本樣式(屬性固定)\n// height = btn-font-size(18) * btn-line-height(1.2) + (btn-pd-y * 2) = 34.56\n// size\n$btn-font-size:                16px !default;\n$btn-line-height:              if($input-height, $input-height, 1.2) !default;\n$btn-pd:                       if($input-height, $input-pd, $spacer $spacer*2) !default; // $spacer*0.8 $spacer*2 $spacer*.8 $spacer*2.6\n\n// color\n$btn-color:                    #fff !default;\n$btn-bg:                       #6cb1c4 !default;\n$btn-hover-color:              #fff !default;\n$btn-hover-bg:                 darken($btn-bg, 6) !default;\n$btn-disabled-bg:              $muted !default;\n\n$btn-theme: (\n    success:      $success,\n    info:         $info,\n    warning:      $warning,\n    danger:       $danger\n) !default;\n\n// other\n$btn-border-radius:            $border-radius !default;\n$btn-effect:                   'background .35s, color .5s' !default;\n\n//\n// field\n$fields-spacer:                  16px !default;\n\n//\n// input-group\n$input-group-height:             $input-height !default;\n$input-group-radius:             $input-radius !default; // ($input-group-height / 2)\n$input-group-border:             1px solid $input-border-color !default;\n$input-group-margin:             false !default;\n\n$input-group-addon-width:        1% !default; // $input-group-height\n$input-group-addon-color:        color(\"primary\") !default;\n$input-group-addon-bg:           lighten($input-border-color,5) !default; // $input-border-color\n\n//\n// label\n$label-color:                  #fff !default; // darken(color(\"primary\"),20)\n$label-bg:                     lighten($brand-primary, 45) !default; // lighten(color(\"primary\"),36)\n$label-border-radius:          $border-radius !default;\n$label-pd:                     2px 5px!default;\n$label-mg:                     0 5px!default;\n\n//\n// alerts\n$alerts: (\n    success:                   desaturate($success, 5) $pale-green,\n    info:                      desaturate($info, 5) $pale-blue,\n    warning:                   desaturate($warning, 5) $pale-yellow,\n    danger:                    desaturate($danger, 5) $pale-red\n) !default;\n\n$alert-round:                  false !default;\n$alert-padding:                6px 8px !default;\n\n//\n// list-group\n$list-group-bg:                #fff !default;\n$list-group-border-color:      lighten($muted, 10) !default;\n$list-group-border-width:      1px !default;\n\n$list-group-link-color:        $link-color !default;\n$list-group-link-hover-color:  $link-hover-color !default;\n$list-group-hover-bg:          lighten($muted, 10) !default;\n\n//\n// modal\n$modal-top:                    80px !default; // 離頂端距離\n$modal-content-bg:             false !default;\n\n$modal-close-size:             50px !default;\n$modal-close-color:            #fff !default;\n$modal-close-hover-color:      #EDE363 !default;\n",
		"@charset \"UTF-8\";\n\n// 去單位\n@function strip-unit($num) {\n    @return $num / ($num * 0 + 1);\n}\n\n// px換算至em\n@function em($px, $context: $font-size-base) {\n    @if (unitless($px)) {\n        $px: $px * 1px;\n    }\n\n    @if (unitless($context)) {\n        $context: $context * 1px;\n    }\n\n    @return $px / $context * 1em;\n}\n\n// px to rem\n@function rem($px, $base: $font-size-base) {\n\n    // 無單位時\n    @if unitless($px) {\n        @return ($px / strip-unit($base)) + rem;\n    }\n\n    @else {\n        // 單位 = px時\n        @if unit($px) == 'px' {\n            @return (strip-unit($px) / strip-unit($base)) + rem;\n        }\n        @if unit($px) == 'rem' {\n            @return $px;\n        }\n    }\n}\n\n// 編碼fix\n@function unicode($str){\n    @return unquote(\"\\\"\")+unquote(str-insert($str, \"\\\\\", 1))+unquote(\"\\\"\");\n}\n\n// z-index\n@function z($value) {\n    @return map-get($z-index, $value);\n}\n\n// 算頁面比例\n@function per($px, $datum: $max-width) {\n    @return (strip-unit($px) / strip-unit($datum)) * 100%;\n}\n\n// 取代變數\n// Replace `$search` with `$replace` in `$string`\n//\n// @author Hugo Giraudel src: https://css-tricks.com/snippets/sass/str-replace-function/\n// 使用方法:\n// .selector {\n//   $string: 'The answer to life the universe and everything is 42.';\n//   content: str-replace($string, 'e', 'xoxo');\n// }\n// str-replace(url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\"), \"#\", \"%23\") !default;\n@function str-replace($string, $search, $replace: \"\") {\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n    }\n\n    @return $string;\n}\n\n// == 四捨五入幾位數\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n    $n: 1;\n    // $number must be a number\n    @if type-of($number) != number {\n        @warn '#{ $number } is not a number.';\n        @return $number;\n    }\n    // $digits must be a unitless number\n    @if type-of($digits) != number {\n        @warn '#{ $digits } is not a number.';\n        @return $number;\n    } @else if not unitless($digits) {\n        @warn '#{ $digits } has a unit.';\n        @return $number;\n    }\n    @for $i from 1 through $digits {\n        $n: $n * 10;\n    }\n    @if $mode == round {\n        @return round($number * $n) / $n;\n    } @else if $mode == ceil {\n        @return ceil($number * $n) / $n;\n    } @else if $mode == floor {\n        @return floor($number * $n) / $n;\n    } @else {\n        @warn '#{ $mode } is undefined keyword.';\n        @return $number;\n    }\n}\n",
		"@charset \"UTF-8\";\n\n// == config\n// ----------------------------------------------------------------------\n$lte7:                    false !default;\n$enable-RWD:              true !default;\n$enable-flex:             false !default;     // 是否使用 flex 版\n$states:                  true !default;      // 情境文字是否輸出\n\n$isIndex:                 false !default;     // 前台首頁用\n$isPage:                  false !default;     // 前台內頁用\n$isLogin:                 false !default;     // 後台登入頁用\n$isAdmin:                 false !default;     // 後台系統用\n\n\n// == RWD-break\n// ----------------------------------------------------------------------\n$mq-breakpoints: (\n    mobile:           375px,  // 380px,\n    phone:            568px,  // 480px,\n    phone-plus:       667px,  // 640px,\n    tablet:           768px,  // 768px,\n    desktop:          1024px, // 980px,\n    wide:             1200px,\n    wider:            1400px\n) !default;\n\n\n// == grid\n// ----------------------------------------------------------------------\n$grid-columns:            12 !default;     // grid 格數\n$grid-gutter-width:       15px !default;   // grid 間距\n\n$grid-breakpoints: (\n    xxs: mobile,\n    xs:  phone,\n    sm:  tablet,\n    md:  desktop,\n    lg:  wide,\n    xl:  wider\n) !default;",
		"@charset \"UTF-8\";\n\n// == utils\n@import \"mixins/pseudo\";         // 偽類 after,before\n@import \"mixins/placeholders\";   // 壓縮 mixin - 相同樣式合併(佔位符)\n@import \"mixins/shape\";          // 形狀類 作三角、圓形等\n@import \"mixins/tab-focus\";      // 聚焦 a btn\n@import \"mixins/position\";       // 位置 absolute,fixed\n@import \"mixins/prefix\";         // 前綴字 (跨瀏覽器)\n@import \"mixins/rem\";            // rem格式\n@import \"mixins/center\";         // 對齊 水平、垂直\n\n// == module\n@import \"mixins/grid\";           // 網格系統\n@import \"mixins/mq\";             // RWD\n@import \"mixins/font\";           // 字型\n@import \"mixins/text\";           // 文字類\n@import \"mixins/icon\";           // 常用小圖標 (link-pseudo,shape)\n\n// == plugin link-prefix\n@import \"mixins/animation\";      // 動畫\n@import \"mixins/gradient\";       // 背景漸層\n\n// == extend 原本放在util.scss裡，改成 mixin @include 方法\n@mixin clearfix {\n    @include mixin-dryer(clearfix) {\n        @include el(after, table) { clear: both; }\n        @if $lte7 { zoom: 1 }\n    }\n}\n@mixin full {\n    @include mixin-dryer(full) {\n        width: 100%;\n        max-width: 100%;\n    }\n}\n\n",
		"﻿@charset \"UTF-8\";\n\n\n// 插入偽類\n@mixin el($pseudo, $display: block, $content: '') {\n    $selector: if($pseudo == 'all', '&::before,&::after', '&::#{$pseudo}');\n\n    #{$selector} {\n        // content 是否要有值\n        @if $content == '' and $display == block {\n            // @include mixin-dryer($dryer...) {\n                content: '';\n                display: block;\n            // }\n        } @else {\n            content: $content;\n            display: if($display, $display, null);\n        }\n\n        @content;\n    }\n}",
		"﻿@charset \"UTF-8\";\n\n// 壓縮 mixin - 相同樣式合併(佔位符)\n// -----------------------------------------------------------------\n\n$Placeholders: () !default;\n\n@function placeholder-set($id) {\n    $unique-id: unique-id();\n    $Placeholders: map-merge($Placeholders, ($id: $unique-id)) !global;\n    @return $unique-id;\n}\n\n@function placeholder-get($id) {\n    @return map-get($Placeholders, $id);\n}\n\n@mixin dynamic-extend($id) {\n    $placeholder-id: placeholder-get($id);\n\n    @if $placeholder-id == null {\n        $placeholder-id: placeholder-set($id);\n        @at-root %#{$placeholder-id} {\n            @content;\n        }\n    }\n    @extend %#{$placeholder-id};\n}\n\n@mixin mixin-dryer($id, $extend: true) {\n    @if $extend == true {\n        @include dynamic-extend($id) {\n            @content;\n        }\n    }\n    @else {\n        @content;\n    }\n}\n",
		"@charset \"UTF-8\";\n\n// Sizing 只輸入一個值時是正方形\n@mixin size($width, $height: $width) {\n    width: $width;\n    height: $height;\n}\n\n// 做圓形\n@mixin circle($size, $align:false, $bg-color:false) {\n    border-radius: 50%;\n    @include size($size);\n\n    @if $align {\n        text-align: center;\n        line-height: $size;\n    }\n    @if $bg-color {\n        background-color: $bg-color;\n    }\n}\n\n// 做三角形\n@mixin caret($direction, $width, $height:$width/2, $color: inherit, $display:inline-block) {\n    @include size(0);\n\n    display: $display;\n    border: $width solid transparent;\n\n    @if ($direction == \"top\" or $direction ==\"up\") {\n        border-bottom-color:$color;\n        border-bottom-width:$height;\n        border-top-width:$width - $height;\n    }\n    @else if ($direction == \"bottom\" or $direction == \"down\") {\n        border-top-color:$color;\n        border-top-width:$height;\n        border-bottom-width:$width - $height;\n    }\n    @else if $direction == \"left\" {\n        border-right-color:$color;\n        border-right-width:$height;\n        border-left-width:$width - $height;\n    }\n    @else if $direction == \"right\" {\n        border-left-color:$color;\n        border-left-width:$height;\n        border-right-width:$width - $height;\n    }\n}\n\n// 做三角形2\n@mixin arrow($dir:right, $width: 11px, $height: $width/2, $color: inherit) {\n    @include size(0);\n    border: $width/2 solid transparent;\n\n    @if ($dir == \"top\" or $dir ==\"up\") {\n        border-bottom: $height solid $color;\n\n        @if $height != $width {\n            border-top-width: $width - $height;\n        }\n    }\n    @else if ($dir == \"bottom\" or $dir == \"down\") {\n        border-top: $height solid $color;\n\n        @if $height != $width {\n            border-bottom-width: $width - $height;\n        }\n    }\n    @else if ($dir == \"right\") {\n        border-left: $height solid $color;\n\n        @if $height != $width {\n            border-right-width: $width - $height;\n        }\n    }\n    @else if ($dir == \"left\") {\n        border-right: $width solid $color;\n\n        @if $height != $width {\n            border-left-width: $width - $height;\n        }\n    }\n}",
		"@charset \"UTF-8\";\n\n@mixin tab-focus($outline: $tab-focus-outline) {\n    // $outline: if($values != null, $values, $tab-focus-outline);\n    // Default\n    outline: nth($outline, 1) nth($outline, 2);\n    // WebKit\n    outline: $outline;\n    outline-offset: 0;\n}",
		"@charset \"UTF-8\";\n\n// Positioning stuff\n@mixin position($position, $args) {\n    position: $position;\n\n    @each $o in top right bottom left {\n        $i: index($args, $o);\n        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {\n            #{$o}: nth($args, $i + 1);\n        }\n    }\n}\n\n// Absolutely positioning stuff\n@mixin absolute($args) {\n    @include position(absolute, $args);\n}\n@mixin fixed($args) {\n    @include position(fixed, $args);\n}\n@mixin sticky($args) {\n    position: -webkit-sticky;\n    @include position(sticky, $args);\n}",
		"@charset \"UTF-8\";\n\n// prefixes\n// -----------------------------------------------------------------\n// 用法\n// @include prefix(transform, translateX(-50%), ms);\n// @include prefix(transform, translateX(-50%), moz ms);\n\n// $pre不給值時，用預設變數，有給值的話就取代原變數\n@mixin prefix($property, $value, $pre: $prefixes, $type: normal) {\n    // $value: unquite(#{$value});\n\n    @each $prefix in $pre {\n        @if $type == normal {\n            -#{$prefix}-#{$property}: #{$value};\n        }\n        @else if $type == all {\n            -#{$prefix}-#{$property}: -#{$prefix}-#{$value};\n        }\n        @else {\n            #{$property}: -#{$prefix}-#{$value};\n        }\n    }\n    #{$property}: #{$value};\n}\n\n// 追加 prefix 值\n@mixin prefix-add($property, $value, $pre) {\n    $prelist: append($prefixes, $pre);\n    @include prefix($property, $value, $prelist)\n}\n\n@mixin transition($args...) {\n    @include prefix(transition, #{$args});\n}\n\n@mixin transform($args...) {\n    @include prefix(transform, #{$args}, ms webkit);  // ms for ie9, webkit for safari\n}\n\n@mixin opacity($opacity) {\n    opacity: $opacity;\n    $opacity-ie: $opacity * 100;\n    filter: alpha(opacity=$opacity-ie); //IE8\n}",
		"@charset \"UTF-8\";\n\n//\n// src https://github.com/bitmanic/rem/blob/master/stylesheets/_rem.scss\n// 使用方法\n// @include rem('padding', 0 32px);\n//\n@mixin rem($property, $values) {\n\n    #{$property}: $values;\n\n    // If there is only one (numeric) value, return the property/value line for it.\n    @if type-of($values) == \"number\" {\n        #{$property}: rem($values);\n    }\n    @else {\n        // Create an empty list that we can dump values into\n        $rem-values: ();\n\n        @each $value in $values {\n            // If the value is zero or not a number, return it\n            @if $value == 0 or type-of( $value ) != \"number\" {\n                $rem-values: append($rem-values, $value);\n            }\n            @else {\n                $rem-values: append($rem-values, rem($value));\n            }\n        }\n        // Return the property and its list of converted values\n        #{$property}: $rem-values;\n    }\n}",
		"@charset \"UTF-8\";\n\n//\n// 讓目標元素垂直置中, 母元素需固定高度\n@mixin middle($target, $height) {\n\n    height: $height;\n\n    &::before {\n        @include mixin-dryer('align-middle') {\n            display: inline-block;\n            vertical-align: middle;\n        }\n        @include mixin-dryer('middle-full') {\n            content: '';\n            height: 100%;\n        }\n    }\n\n    #{$target} {\n        @if $target != img {\n            @include mixin-dryer('align-middle') {\n                display: inline-block;\n                vertical-align: middle;\n            }\n        }\n        @content;\n    }\n}\n\n//\n// 用法:\n// @include center(x)\n// output: transform: translateX(-50%);\n//\n// @include center(500px)\n// output: margin-left: -250px\n//\n// @include center(500px, 300)\n// output: margin-left: -250px; margin-top: -150px\n//\n@mixin center($width: null, $height: null) {\n    @if not $width and not $height {\n        @include absolute(left 50% top 50%);\n        @include transform(translate(-50%,-50%));\n    }\n    // 水平+垂直\n    @else if $width and $height {\n        @include absolute(left 50% top 50%);\n\n        width: $width;\n        height: $height;\n        margin-top: -($height / 2);\n        margin-left: -($width / 2);\n    }\n    // 水平\n    @else if not $height {\n        @include absolute(left 50%);\n\n        @if type-of($width) == number {\n            width: $width;\n            margin-left: -($width / 2);\n        }\n        @else {\n            @include transform(translateX(-50%));\n        }\n    }\n    // 垂直\n    @else {\n        @include absolute(top 50%);\n\n        @if type-of($height) == number {\n            height: $height;\n            margin-top: -($height / 2);\n        }\n        @else {\n            @include transform(translateY(-50%));\n        }\n    }\n}",
		"@charset \"UTF-8\";\n\n$gap:                     1.6% !default;\n\n//\n// 使用方法:\n// @include grid(1/3);\n// width: 33.33%;\n// 四捨五入: decimal-round($number, 2) in function\n@mixin grid($fraction, $selector: 'width') {\n    #{$selector}: decimal-round(($fraction * 100%), 2, 'floor');\n}\n\n// 使用方法:\n// @include grid-gap(1, 2, $gap);\n@mixin grid-gap($size, $columns, $gap: $gap) {\n    width: decimal-round( percentage($size / $columns) - ($gap / $columns * ($columns - 1)), 2, 'floor' );\n}\n\n@mixin make-col($size, $columns: $grid-columns, $gap: $grid-gutter-width) {\n    @if $enable-flex {\n        flex: 0 0 percentage($size / $columns);\n        max-width: percentage($size / $columns);\n    } @else {\n        width: percentage($size / $columns);\n    }\n}\n\n@mixin make-col-modifier($type, $size, $columns) {\n    // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)\n    @if $type == push {\n        left: if($size > 0, percentage($size / $columns), auto);\n    }\n    @else if $type == pull {\n        right: if($size > 0, percentage($size / $columns), auto);\n    }\n    @else if $type == offset {\n        margin-left: percentage($size / $columns);\n    }\n}\n\n@mixin make-grid-columns($columns: $grid-columns, $gap: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n    // Common properties for all breakpoints\n    %grid-column {\n        position: relative;\n        // Prevent columns from collapsing when empty\n        min-height: 1px;\n\n        @if $enable-flex {\n            width: 100%;\n        }\n    }\n    %grid-padding {\n        @if not $enable-flex {\n            float: left;\n        }\n        // Inner gutter via padding\n        padding-right: ($gap / 2);\n        padding-left: ($gap / 2);\n    }\n\n    // 全營幕通用\n    @for $i from 1 through $columns {\n        .col-#{$i} {\n            @extend %grid-column, %grid-padding;\n            @include make-col($i, $grid-columns, $gap);\n        }\n        @if $i != $columns { // Avoid emitting useless .offset-xs-0\n            @each $modifier in (pull, push) {\n                .#{$modifier}-#{$i} {\n                    @include make-col-modifier($modifier, $i, $columns)\n                }\n            }\n            .offset-#{$i} {\n                @include make-col-modifier(offset, $i, $columns)\n            }\n        }\n    }\n\n    $breakpoint-counter: 0;\n    @each $breakpoint, $value in $breakpoints {\n        $breakpoint-counter: ($breakpoint-counter + 1);\n\n        @for $i from 1 through $columns {\n            .col-#{$breakpoint}-#{$i} {\n                @extend %grid-column;\n            }\n        }\n\n        @include mq($value) {\n            $col-this: ();\n\n            @for $i from 1 through $columns {\n                .col-#{$breakpoint}-#{$i} {\n                    @include make-col($i, $columns, $gap);\n                }\n                @if not $enable-flex {\n                    $col-this: $col-this, '.col-#{$breakpoint}-#{$i}';\n                }\n            }\n\n            // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n            @if $enable-flex {\n                .col-#{$breakpoint} {\n                    flex-basis: 0;\n                    flex-grow: 1;\n                    max-width: 100%;\n                    padding-right: ($gap / 2);\n                    padding-left: ($gap / 2);\n                }\n            } @else {\n                #{$col-this} {\n                    float: left;\n                    padding-right: ($gap / 2);\n                    padding-left: ($gap / 2);\n                }\n            }\n\n            @each $modifier in (pull, push) {\n                @for $i from 0 through $columns {\n                    .#{$modifier}-#{$breakpoint}-#{$i} {\n                        @include make-col-modifier($modifier, $i, $columns)\n                    }\n                }\n            }\n\n            // `$columns - 1` because offsetting by the width of an entire row isn't possible\n            @for $i from 0 through ($columns - 1) {\n                @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .offset-xs-0\n                    .offset-#{$breakpoint}-#{$i} {\n                        @include make-col-modifier(offset, $i, $columns)\n                    }\n                }\n            }\n        }\n    }\n}\n",
		"@charset \"UTF-8\";\n\n// mixin來源: https://github.com/sass-mq/sass-mq\n//\n// == var (breaklist in var.scss)\n// ----------------------------------------------------------------------\n$mq-base-font-size:    16px !default;\n\n// 設定為 false 時讓不支援 @media queries 的瀏覽器可讀\n// (IE <= 8, Firefox <= 3, Opera <= 9)\n$mq-responsive:        true !default;\n\n$mq-static-breakpoint: desktop !default;\n\n// Customize the media type (e.g. `@media screen` or `@media print`)\n$mq-media-type:        all !default;\n\n\n// == function\n// ----------------------------------------------------------------------\n// Convert pixels to ems\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n// Get a breakpoint's width\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n// $count可設 +1 or -1\n// 用法 @include mq(break(table,-1)) => 767px\n@function break($name, $count, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        $media: map-get($breakpoints, $name);\n        $break: $media + $count;\n\n        @return $break;\n    } @else {\n        $break: $name + $count;\n        @return $break;\n    }\n}\n\n\n// == mixin\n// ----------------------------------------------------------------------\n// Media Query mixin\n// @example scss\n// @include mq($min: mobile) {}\n// @include mq($max: tablet) {}\n// @include mq(mobile, tablet) {}\n// @include mq($min: tablet, $and: '(orientation: landscape)') {}\n// @include mq(950px) {}\n// @include mq(tablet, $media-type: screen) {}\n//\n// // Advanced use:\n// $my-breakpoints: ( L: 900px, XL: 1200px );\n// @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {}\n//\n@mixin mq(\n    $min: false,\n    $max: false,\n    $and: false,\n    $comma: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // min: this breakpoint (inclusive)\n    @if $min {\n        @if type-of($min) == number {\n            $min-width: $min;\n        } @else {\n            $min-width: mq-get-breakpoint-width($min, $breakpoints);\n        }\n    }\n\n    // max: that breakpoint (exclusive)\n    @if $max {\n        @if type-of($max) == number {\n            $max-width: $max;\n        } @else {\n            $max-width: mq-get-breakpoint-width($max, $breakpoints);\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: $static-breakpoint-width;\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $max == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n        @if $comma          { $media-query: '#{$media-query} , #{$comma}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n// Add a breakpoint\n// @example scss\n//  @include mq-add-breakpoint(tvscreen, 1920px);\n//  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n@mixin mq-max($value) {\n    @include mq($max: $value) { @content };\n}",
		"@charset \"UTF-8\";\n\n// src https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6\n\n// =============================================================================\n// String Replace in function\n// =============================================================================\n\n\n// =============================================================================\n// Font Face\n// =============================================================================\n// 使用方法：\n// @include font-face(Samplino, fonts/Samplino);\n// @include font-face(\"Samplina Neue\", fonts/SamplinaNeue, bold, italic);\n// @include font-face(Samplinoff, fonts/Samplinoff, null, null, woff);\n// @include font-face(Samplinal, fonts/Samplinal, 500, normal, eot woff2 woff);\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n    $src: null;\n\n    $extmods: (\n        eot: \"?\",\n        svg: \"#\" + str-replace($name, \" \", \"_\")\n    );\n\n    $formats: (\n        otf: \"opentype\",\n        ttf: \"truetype\"\n    );\n\n    @each $ext in $exts {\n        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n        $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n    }\n\n    @font-face {\n        font-family: quote($name);\n        font-style: $style;\n        font-weight: $weight;\n        src: $src;\n    }\n}",
		"@charset \"UTF-8\";\n\n@mixin text-hide {\n    @include mixin-dryer(texthide) {\n        font: 0/0 a;\n        color: transparent;\n        text-shadow: none;\n        background-color: transparent;\n        border: 0;\n    }\n}\n\n@mixin sr-only {\n    @include mixin-dryer(sronly) {\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        padding: 0;\n        margin: -1px;\n        overflow: hidden;\n        clip: rect(0,0,0,0);\n        border: 0;\n    }\n}\n\n// == 字換圖\n@mixin text-pic($img, $width:false, $height:false, $seat: 0 0) {\n    @include text-hide;\n\n    background: url(#{$img-path}/#{$img}) $seat no-repeat;\n\n    @if $width  { width: $width; }\n    @if $height { height: $height; }\n}\n\n// == 文字溢位出現省略號,要設寬度\n@mixin text-overflow($width:100%) {\n    @include mixin-dryer('text-overflow') {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n    @if $width { width: $width; }\n}\n\n// == 文字邊框 ex. @include stroke(2,#fff);\n@function stroke($stroke, $color) {\n    $shadow: ();\n    $from: $stroke*-1;\n    @for $i from $from through $stroke {\n        @for $j from $from through $stroke {\n            $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);\n        }\n    }\n    @return $shadow;\n}\n@mixin stroke($stroke, $color) {\n    text-shadow: stroke($stroke, $color);\n}",
		"@charset \"UTF-8\";\n\n// icon dot\n@mixin icon-dot($direction, $size, $color, $pos: false, $elem: 'before') {\n    @include el($elem) {\n        @include circle($size, $bg-color: $color);\n        @if $pos {\n            @include absolute($pos);\n        }\n        @content;\n    }\n    @if $direction == left or $direction  == right {\n        padding-#{$direction}: $size * 3;\n    }\n}\n\n// icon arrow\n@mixin icon-arrow($direction, $size, $color, $pos: false, $elem: 'before') {\n    @include el($elem) {\n        @include arrow($direction, $size, $color: $color);\n        @if $pos {\n            @include absolute($pos);\n        }\n        @content;\n    }\n}\n\n// icon arrow\n@mixin icon-square($direction, $size, $color, $pos: false, $elem: 'before') {\n    @include el($elem) {\n        background: $color;\n        @include size($size);\n        @if $pos {\n            @include absolute($pos);\n        }\n        @content;\n    }\n    @if $direction == left or $direction  == right {\n        padding-#{$direction}: $size * 3;\n    }\n}",
		"@charset \"UTF-8\";\n\n// animation\n// -----------------------------------------------------------------\n// 使用方法:\n// @include keyframes(move-the-object) {\n//   0%   { left: 100px; }\n//   100% { left: 200px; }\n// }\n\n// .object-to-animate {\n//   @include animation('move-the-object .5s 1', 'move-the-object-again .5s 1 .5s');\n// }\n//\n\n@mixin animation($animate...) {\n    $max: length($animate);\n    $animations: '';\n\n    @for $i from 1 through $max {\n        $animations: #{$animations + nth($animate, $i)};\n\n        @if $i < $max {\n            $animations: #{$animations + \", \"};\n        }\n    }\n    @include prefix(animation, $animations);\n}\n\n@mixin keyframes($animationName){\n    @each $pfx in $prefixes {\n        @if $pfx == \"webkit\" {\n            @-webkit-keyframes #{$animationName} { @content; }\n        }\n        @else if $pfx == \"moz\" {\n            @-moz-keyframes #{$animationName} { @content; }\n        }\n        @else if $pfx == \"ms\" {\n            @-ms-keyframes #{$animationName} { @content; }\n        }\n        @else if $pfx == \"o\" {\n            @-o-keyframes #{$animationName} { @content; }\n        }\n    }\n    @keyframes #{$animationName} { @content; }\n}\n\n// 使用方法\n// @include diy-animate(gotopIn, 1s 1 forwards) {\n//     0% {\n//         opacity: 0;\n//         @include prefix(transform, translateY(20px));\n//     }\n//     100% {\n//         opacity: 1;\n//         @include prefix(transform, translateY(0));\n//     }\n// }\n@mixin diy-animate($animationName, $animate) {\n    @include animation($animationName $animate);\n    @include keyframes($animationName) {\n        @content\n    }\n}",
		"@charset \"UTF-8\";\n\n// gradient\n// -----------------------------------------------------------------\n//\n@mixin linear-gradient($deg, $colors...) {\n    // Direction has been omitted and happens to be a color-stop\n    @if is-direction($deg) == false {\n        $colors: $deg, $colors;\n        $deg: 180deg;\n    }\n    background: nth(nth($colors, 1), 1);\n    @include prefix(background, linear-gradient($colors), $type:els);\n}\n\n@mixin radial-gradient($colors...) {\n    // 用最後的顏色\n    $last-color: length($colors);\n    background: nth(nth($colors, $last-color), 1);\n    @include prefix(background, radial-gradient($colors), $type:els);\n}\n\n@mixin border-image($deg, $colors...) {\n    // Direction has been omitted and happens to be a color\n    @if is-direction($deg) == false {\n        $colors: $deg, $colors;\n        $deg: 180deg;\n    }\n    @include prefix(border-image, linear-gradient($deg, $colors), $type:all);\n    border-image-slice: 1;\n}",
		"@charset \"UTF-8\";\n\n/*      base\n-----------------------------------------------------------------------*/\n@-moz-viewport, @-ms-viewport, @-o-viewport, @-webkit-viewport, @viewport { width: device-width; }\n\n// Credit: https://github.com/suitcss/base\n[tabindex=\"-1\"]:focus {\n    outline: none !important;\n}\n\nhtml, body {\n    text-align: center;\n    height: 100%;\n}\n\nbody {\n    background: $body-bg;\n    color: $body-color;\n    font: #{$font-size-base}/#{$line-height} $font-family-base;\n    letter-spacing: .01em;\n}\n\nimg {\n    vertical-align: middle;\n}\n\na, area, button, [role=\"button\"], input, label, select, summary, textarea {\n    touch-action: manipulation;\n}",
		"@charset \"UTF-8\";\n\n//\n// Headings\n// -----------------------------------------------\nh1 { margin-top: 0; }\n\nh1, h2, h3, h4, h5, h6 {\n    @if $headings-margin-bottom   { margin-bottom: $headings-margin-bottom; }\n    @if $headings-font-family     { font-family: $headings-font-family; }\n    @if $headings-font-weight     { font-weight: $headings-font-weight; }\n    @if $headings-line-height     { line-height: $headings-line-height; }\n    @if $headings-color           { color: $headings-color; }\n    @if $headings-letter-spacing  { letter-spacing: $headings-letter-spacing; }\n}\n\n@for $i from 1 through 6 {\n    $headings: $font-size-h1 $font-size-h2 $font-size-h3 $font-size-h4 $font-size-h5 $font-size-h6;\n\n    h#{$i} {\n        @include rem('font-size', nth($headings, $i));\n    }\n}\n\n//\n// Body text\n// -----------------------------------------------\nb, strong, .b, .strong {\n    font-weight: bold;\n}\n\nsmall {\n    font-size: 80%;\n    font-weight: normal;\n}\n\n// 螢光筆註記\nmark {\n    background-color: lighten($warning, 30%);\n    padding: .2em;\n}\n\nhr {\n    margin: $spacer*2 0;\n    border: 0;\n    border-top: $hr-border;\n}\n\np {\n    margin: 0;\n\n    & + & {\n        margin-top: $p-spacer;\n    }\n}\n\nabbr[title],\n// Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257\nabbr[data-original-title] {\n    cursor: help;\n    border-bottom: 1px dotted $abbr-border-color;\n}\n\n//\n// list\n// ------------------------------------------------------------\nol, ul, dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    padding-left: 0;\n\n    ol, ul, dl {\n        font-size: 90%;\n        margin-bottom: 0;\n    }\n}\ndt {\n    font-weight: bold;\n}\ndd {\n    margin-left: 0; // Undo browser default\n}\n\n%list-unstyled {\n    list-style: none;\n    padding-left: 0;\n}\n%list-inline {\n    @extend %list-unstyled;\n\n    > li {\n        display: inline-block;\n        &:not(:last-child) { margin-right: 5px; }\n    }\n}\n\n.list-unstyled { @extend %list-unstyled; }\n.list-inline   { @extend %list-inline; }",
		"@charset \"UTF-8\";\n\n// common ref: core/mixins\n// ------------------------------------------------------------\n// 常用樣式\n.clearfix      { @include clearfix; }\n.sr-only       { @include sr-only; }\n\n// 偶爾用到\n.pull-left     { float: left; }\n.pull-right    { float: right; }\n.block         { display: block; }\n.inline-block  { display: inline-block; }\n.inline        { display: inline; }\n.clear         { clear: both; }\n.hidden        { display: none; }\n.circle        { border-radius: 50%; } // 圓形\n.img-center    { display: block; margin: auto; }\n\n.mx-a {\n    margin-right: auto;\n    margin-left:  auto;\n}\n\n// spacing (ref: core/_variables.scss)\n// src: https://gist.github.com/MatthewRDodds/8f171914ee6b826db29393f33229d509\n// ex. mt-6, p-12\n@each $prop, $abbrev in (margin: m, padding: p) {\n    @each $size, $value in $spacing {\n\n        .#{$abbrev}-#{$size}  { #{$prop}:        $value; } // All sides\n        .#{$abbrev}t-#{$size} { #{$prop}-top:    $value; }\n        .#{$abbrev}r-#{$size} { #{$prop}-right:  $value; }\n        .#{$abbrev}b-#{$size} { #{$prop}-bottom: $value; }\n        .#{$abbrev}l-#{$size} { #{$prop}-left:   $value; }\n\n        // Axes\n        .#{$abbrev}x-#{$size} {\n            #{$prop}-right:  $value;\n            #{$prop}-left:   $value;\n        }\n        .#{$abbrev}y-#{$size} {\n            #{$prop}-top:    $value;\n            #{$prop}-bottom: $value;\n        }\n    }\n}\n\n// responsive hidden\n// ------------------------------------------------------------\n@each $breakpoint, $value in $grid-breakpoints {\n    @for $i from 2 through length($grid-breakpoints) {\n        @media (max-width: break(nth($mq-breakpoints, +1),-1)) {\n            .hidden-#{$breakpoint} {display: none;}\n        }\n    }\n}\n\n// vertical align\n// inline, inline-block, inline-table, and table cell elements.\n// ------------------------------------------------------------\n.align-top    { vertical-align: top; }\n.align-middle { vertical-align: middle; }\n.align-bottom { vertical-align: bottom; }\n\n\n// text\n// ------------------------------------------------------------\n.text-left   { text-align: left; }\n.text-right  { text-align: right; }\n.text-center { text-align: center; }\n.text-nowrap   { white-space: nowrap; }\n.text-overflow { @include text-overflow(null); }\n.text-hide   { @include text-hide; }\n\n@if $font-family-sp {\n    .font-sp { font-family: $font-family-sp; }\n}\n\n// src: w3.css v4\n.font-tiny   { @include rem('font-size',13); }  // 10px\n.font-sm     { @include rem('font-size',14); }  // 12px\n.font-md     { @include rem('font-size',15); }  // 15px\n.font-lg     { @include rem('font-size',18); }  // 18px\n.font-xl     { @include rem('font-size',24); }  // 24px\n.font-xxl    { @include rem('font-size',32); }  // 36px\n.font-xxxl   { @include rem('font-size',48); }  // 48px\n.font-jumbo  { @include rem('font-size',64); }  // 64px\n\n\n// 情境\n// ------------------------------------------------------------\n.text-white { color: #fff; }\n.bg-white   { background-color: #fff; }\n.bg-black   { background-color: #000; }\n\n// ref: core/variables.scss $states: true\n@if $states {\n    @each $type, $color in $colors {\n        .text-#{$type}  { color: $color; }\n        .bg-#{$type}    { background-color: $color; }\n        .hover-#{$type} {\n            color: $color;\n            &:hover, &:active { color: darken($color, 15);}\n        }\n    }\n}\n\n\n// sizing\n// ------------------------------------------------------------\n@each $size, $value in $sizes {\n    .w-#{$size} { width: $value; }\n}\n.w-auto { width: auto; }\n\n\n// goTop\n// ------------------------------------------------------------\n.goTop {\n    z-index: z(goTop);\n\n    @extend .text-white;\n    @include fixed(bottom 45px right 1%);\n    @include transition(.4s);\n    @include circle(50px, center, rgba(#000,.35));\n\n    display: none;\n    font-size: em(18);\n\n    &:hover, &:active {\n        @extend .text-white;\n        background: rgba(#000,.7);\n    }\n    &::before { top: 0 !important; }\n}\n\n\n// 本次專案才用到的樣式\n// ------------------------------------------------------------\nh3 {\n    letter-spacing: 0.05em;\n}\n.btn {\n    letter-spacing: 0.05em;\n    font-weight: bold;\n}\n.list-underline {\n    li {\n        margin-bottom: 5px;\n        padding-bottom: 5px;\n        border-bottom: 1px dotted #ddd;\n    }\n}\nol.list-underline {\n    padding-left: 2em;\n    text-indent: -2em;\n}"
	],
	"mappings": "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",
	"names": []
}